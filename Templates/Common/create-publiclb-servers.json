{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "labName": {
            "type": "string",
            "metadata": {
                "description": "Lab Name."
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Administrator username."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "administrator password."
            }
        },
        "notificationEmail": {
            "type": "string",
            "metadata": {
                "description": "Notification email address."
            }
        },
        "vNetResourceGroup": {
            "type": "string",
            "metadata": {
                "description": "Resource Group containing the VNet."
            }
        },
        "vNetName": {
            "type": "string",
            "metadata": {
                "description": "Name of the virtual network."
            }
        },
        "subnetName": {
            "type": "string",
            "metadata": {
                "description": "Name of the subnet."
            }
        },
        "serversInfo": {
            "type": "object",
            "metadata": {
                "description": "Servers Information."
            },
            "defaultValue": {}
        },
        "_artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": "The location of resources such as templates and DSC modules that the script is dependent"
            }
        },
        "_artifactsLocationSasToken": {
            "type": "securestring",
            "metadata": {
                "description": "Auto-generated token to access _artifactsLocation"
            },
            "defaultValue": ""
        }
    },
    "variables": {
        "lbName": "[toLower(parameters('serversInfo').lbName)]",
        "lbIPAddress": "[toLower(parameters('serversInfo').lbIPAddress)]",
        "lbPIPName": "[concat(variables('lbName'), '-pip')]",
        "lbPIPID": "[resourceId('Microsoft.Network/publicIPAddresses',variables('lbPIPName'))]",
        "lbDNSName": "[parameters('serversInfo').lbdnsprefix]",
        "lbInboundNatRules": "[parameters('serversInfo').lbInboundNatRules]",
        "servers": "[parameters('serversInfo').servers]",
        "lbASetName": "[concat(variables('lbName'), '-aset')]",
        "lbId": "[resourceId('Microsoft.Network/loadBalancers', variables('lbName'))]",
        "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vNetName'), parameters('subnetName'))]",
        "templates": {
            "createVMTemplateUri": "[concat(parameters('_artifactsLocation'),'/create-vm.json', parameters('_artifactsLocationSasToken'))]"
        }
    },
    "resources": [
        {
            "comments": "Availability Set.",
            "type": "Microsoft.Compute/availabilitySets",
            "apiVersion": "[providers('Microsoft.Compute', 'availabilitySets').apiVersions[0]]",
            "location": "[resourceGroup().location]",
            "name": "[variables('lbASetName')]",
            "properties": {
                "PlatformUpdateDomainCount": 2,
                "PlatformFaultDomainCount": 2
            },
            "sku": {
                "name": "Aligned"
            },
            "tags": {
                "LabName": "[parameters('labName')]"
            }
        },
        {
            "comments": "Create LB Public IP Address.",
            "apiVersion": "[providers('Microsoft.Network', 'publicIPAddresses').apiVersions[0]]",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('lbPIPName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[variables('lbDNSName')]"
                }
            },
            "tags": {
                "LabName": "[parameters('labName')]"
            }
        },
        {
            "comments": "Public Load Balancer.",
            "type": "Microsoft.Network/loadBalancers",
            "apiVersion": "[providers('Microsoft.Network', 'loadBalancers').apiVersions[0]]",
            "location": "[resourceGroup().location]",
            "name": "[variables('lbName')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/availabilitySets/', variables('lbASetName'))]",
                "[concat('Microsoft.Network/publicIPAddresses/', variables('lbPIPName'))]"
            ],
            "tags": {
                "LabName": "[parameters('labName')]"
            },
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "loadBalancerFrontEnd",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[variables('lbPIPID')]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "loadBalancerBackEnd"
                    }
                ],
                "copy": [
                    {
                        "name": "inboundNatRules",
                        "count": "[length(variables('lbInboundNatRules'))]",
                        "input": {
                            "name": "[variables('lbInboundNatRules')[copyIndex('inboundNatRules')].name]",
                            "properties": {
                                "frontendIPConfiguration": {
                                    "id": "[concat(variables('lbId'), '/frontendIpConfigurations/loadBalancerFrontEnd')]"
                                },
                                "protocol": "Tcp",
                                "frontendPort": "[variables('lbInboundNatRules')[copyIndex('inboundNatRules')].lbPort]",
                                "backendPort": "[variables('lbInboundNatRules')[copyIndex('inboundNatRules')].lbPort]",
                                "enableFloatingIP": false
                            }
                        }
                    }
                ]
            }
        },
        {
            "comments": "Public LB Servers.",
            "type": "Microsoft.Resources/deployments",
            "name": "[concat('Deploy-PublicLB-', copyIndex())]",
            "apiVersion": "[providers('Microsoft.Resources', 'deployments').apiVersions[0]]",
            "copy": {
                "name": "publicLBServersCount",
                "mode": "Serial",
                "count": "[length(variables('servers'))]"
            },
            "dependsOn": [
                "[concat('Microsoft.Compute/availabilitySets/', variables('lbASetName'))]",
                "[concat('Microsoft.Network/loadBalancers/', variables('lbName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('templates').createVMTemplateUri]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "labName": {
                        "value": "[parameters('labName')]"
                    },
                    "adminUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "adminPassword": {
                        "value": "[parameters('adminPassword')]"
                    },
                    "notificationEmail": {
                        "value": "[parameters('notificationEmail')]"
                    },
                    "vNetResourceGroup": {
                        "value": "[parameters('vNetResourceGroup')]"
                    },
                    "vNetName": {
                        "value": "[parameters('vNetName')]"
                    },
                    "subnetName": {
                        "value": "[parameters('subnetName')]"
                    },
                    "publicIPAddressName": {
                        "value": "[concat(variables('servers')[copyIndex()].vmName, '-pip')]"
                    },
                    "dnsPrefix": {
                        "value": "[variables('servers')[copyIndex()].dnsPrefix]"
                    },
                    "nicName": {
                        "value": "[concat(variables('servers')[copyIndex()].vmName, '-nic')]"
                    },
                    "vmName": {
                        "value": "[concat(variables('servers')[copyIndex()].vmName)]"
                    },
                    "vmGalleryImage": {
                        "value": "[variables('servers')[copyIndex()].galleryImage]"
                    },
                    "vmOSDiskName": {
                        "value": "[concat(variables('servers')[copyIndex()].vmName, '-osdisk')]"
                    },
                    "vmSize": {
                        "value": "[variables('servers')[copyIndex()].vmSize]"
                    },
                    "privateIPAddress": {
                        "value": "[variables('servers')[copyIndex()].vmIPAddress]"
                    },
                    "lbName": {
                        "value": "[variables('lbName')]"
                    },
                    "skipCreation": {
                        "value": "[variables('servers')[copyIndex()].skip]"
                    }
                }
            }
        }
    ]
}